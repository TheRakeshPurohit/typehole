// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`finds selected expression 1`] = `
"typehole.t(function App() {
    return (<div className=\\"App\\">
        <header className=\\"App-header\\">
          <img src={logo} className=\\"App-logo\\" alt=\\"logo\\"/>
          <p>
            Edit <code>src/App.tsx</code> and save to{\\" \\"}
          </p>
          <a className=\\"App-link\\" href=\\"https://reactjs.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">
            Learn React
          </a>
        </header>
      </div>);
})"
`;

exports[`wraps expressions into recorder call 1`] = `"typehole.t(tsquery.query(ast, \\"InterfaceDeclaration > Identifier[name='AutoDiscover']\\"))"`;

exports[`wraps function declaration into a recorder 1`] = `
"typehole.t(function App() {
    return (<div className=\\"App\\">
        <header className=\\"App-header\\">
          <img src={logo} className=\\"App-logo\\" alt=\\"logo\\"/>
          <p>
            Edit <code>src/App.tsx</code> and save to{\\" \\"}
          </p>
          <a className=\\"App-link\\" href=\\"https://reactjs.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">
            Learn React
          </a>
        </header>
      </div>);
})"
`;

exports[`wraps literals into recorder calls 1`] = `"typehole.t(1 + 3 + 4)"`;

exports[`wraps literals into recorder calls 2`] = `"typehole.t(\\"moro\\" + \\"moro\\")"`;

exports[`wraps literals into recorder calls 3`] = `"typehole.t([\\"moro\\", \\"moro\\"])"`;

exports[`wraps literals into recorder calls 4`] = `"typehole.t([() => 3, \\"moro\\"])"`;
